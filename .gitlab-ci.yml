image: docker:latest

services:
  - docker:dind

variables:
  API_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

before_script:
  - apk add --no-cache py-pip git-lfs # Install Git LFS along with other dependencies in the base Alpine image
  - pip install docker-compose
  - git lfs install # Initialize Git LFS for the repository
  - git lfs pull # Ensure that LFS files are downloaded before any operations

stages:
  - Semantic-Version

Semantic-Version:
  stage: Semantic-Version
  image: python:3.8
  before_script:
    - apt-get update -qy && apt-get install -y git git-lfs # Ensure Git and Git LFS are installed using apt-get
    - git lfs install # Initialize Git LFS
    - "which ssh-agent || ( apt-get update -qy && apt-get install openssh-client -qqy )"
    - eval `ssh-agent -s`
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null # add ssh key
    - pip3 install -U Commitizen # install commitizen
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_rsa.pub
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - git lfs pull # Pull LFS files before any git operations
  script:
    - git remote set-url origin git@gitlab.com:${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git # git configuration
    - git config --global user.email "${CI_EMAIL}" && git config --global user.name "${CI_USERNAME}"
    - 'exists=`git show-ref refs/heads/main` && if [ -n "$exists" ]; then git branch -D main; fi'
    - git checkout -b main
    - cz bump --yes # execute auto bump and push to main
    - git push --tags origin HEAD:main
  only:
    refs:
      - main
